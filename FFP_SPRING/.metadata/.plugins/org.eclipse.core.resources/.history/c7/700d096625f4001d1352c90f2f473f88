package com.example.demo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.entity.Diet;
import com.example.demo.entity.Doctor;
import com.example.demo.entity.Exercise;
import com.example.demo.entity.Registration;
import com.example.demo.entity.Trainer;
import com.example.demo.service.Service_implementation;

@RestController
@RequestMapping("/api")
public class HealthCare {
	
	private Service_implementation serviceImp;

	@Autowired
	public HealthCare(Service_implementation serviceImp) {
		this.serviceImp = serviceImp;
	}
	
	@PostMapping("/register")
	public void addUser(@RequestBody Registration user) {
		
		serviceImp.addUser(user);
		
	}
	
	@GetMapping("/users")
	public List<Registration> getAllData(){
		return serviceImp.getAllUsers();
	}
	
	@GetMapping("admins/{id}")
	public List<Registration> showAllAdmins(@PathVariable("id") boolean is_admin){
		return serviceImp.getAdmins(is_admin);
	}
//	
	@GetMapping("users/{id}")
	public Registration getyId(@PathVariable("id") int id) {
		return serviceImp.getUser(id);
	}
	
	

	
	@GetMapping("/doctor")
	public List<Doctor> displayAllDoctor()   {
		List<Doctor> doctors = serviceImp.displayAlldataDoctor();
		return doctors;
		
	}
	@PostMapping("/doctor")
	public void inserionDoctor(@RequestBody Doctor doc) {
		doc.setId(0);
		serviceImp.InsertDoctor(doc);
	}
	@GetMapping("/doctor/doctorID/{doctorId}")    
	public Doctor getDoctor(@PathVariable("doctorId") int id)
	{
		return serviceImp.displayByIdDoctor(id);
		
	}
	
	@PutMapping("/doctor") 
	public void updationDoctor(@RequestBody Doctor doc)
	{
		serviceImp.updateDoctor(doc);
	}
	@DeleteMapping("/doctor/{DoctorId}")
	public void deleteDoctorBasedOnId(@PathVariable("DoctorId") int id)
	{
		serviceImp.deleteDoctorById(id);
		
	}
	
	@GetMapping("doctor/speciality/{speciality}")
	public List<Doctor> getDoctorByspeciality(@PathVariable("speciality") String speciality) 
	
	{
		return serviceImp.getDoctorBySpeciality(speciality);
	}
	
	
	
	
	
	////ath...
	
	
	@GetMapping("/trainer")
	public List<Trainer> displayAllTrainer()   {
		List<Trainer> trainers = serviceImp.displayAlldataTrainer();
		return trainers;
		
	}
	@PostMapping("/trainer")
	public void inserionTrainer(@RequestBody Trainer trn) {
		trn.setId(0);
		serviceImp.InsertTrainer(trn);
	}
	
	
	@GetMapping("/trainer/{trainerId}")    
	public Trainer getTrainer(@PathVariable("trainerId") int id)
	{	
		return serviceImp.displayByIdTrainer(id);
		
	}
	
	@PutMapping("/trainer") 
	public void updationtrainer(@RequestBody Trainer trn)
	{
		serviceImp.updateTrainer(trn);
	}
	@DeleteMapping("/trainer/{trainerId}")
	public void deleteTrainerBasedOnId(@PathVariable("trainerId") int id)
	{
		serviceImp.deleteTrainerById(id);
		
	}
	
	@GetMapping("trainer/speciality/{speciality}")
	public List<Trainer> getTrainerByspeciality(@PathVariable("speciality") String speciality) 
	
	{
		return serviceImp.getTrainerBySpeciality(speciality);
	}
	


	
	
	
	
	
	
	
	
	@GetMapping("/diet")
	public List<Diet> displayAllDiet()   {
		List<Diet> diets = serviceImp.displayAlldataDiet();
		return diets;
		
	}
	@PostMapping("/diet")
	public void inserionDiet(@RequestBody Diet det) {
		det.setId(0);
		serviceImp.InsertDiet(det);
	}
	
	
	@GetMapping("/diet/{dietId}")    
	public Diet getDiet(@PathVariable("dietId") int id)
	{	
		return serviceImp.displayByIdDiet(id);
		
	}
	
	@PutMapping("/diet") 
	public void updationDiet(@RequestBody Diet det)
	{
		serviceImp.updateDiet(det);
	}
	
	@DeleteMapping("/diet/{dietId}")
	public void deleteDietBasedOnId(@PathVariable("dietId") int id)
	{
		serviceImp.deleteDietById(id);
		
	}
	
	
	
	
	
	
	
	@GetMapping("/exercise")
	public List<Exercise> displayAllExercise()   {
		List<Exercise> exes = serviceImp.displayAlldataExercise();
		return exes;
		
	}
	@PostMapping("/exercise")
	public void inserionExercise(@RequestBody Exercise exe) {
		exe.setId(0);
		serviceImp.InsertExercise(exe);
	}
	
	
	@GetMapping("/exercise/{exerciseId}")    
	public Exercise getExercise(@PathVariable("exerciseId") int id)
	{	
		return serviceImp.displayByIdExercise(id);
		
	}
	
	@PutMapping("/exercise") 
	public void updationExercise(@RequestBody Exercise exe)
	{
		serviceImp.updateExercise(exe);
	}
	
	@DeleteMapping("/exercise/{exerciseId}")
	public void deleteExerciseBasedOnId(@PathVariable("exerciseId") int id)
	{
		serviceImp.deleteExerciseById(id);
		
	}
	
	
	
}
