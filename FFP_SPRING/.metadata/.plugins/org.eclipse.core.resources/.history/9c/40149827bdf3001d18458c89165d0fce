package com.example.demo.service;

import java.util.List;

import javax.transaction.Transactional;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.demo.entity.Registration;
import com.example.demo.persistance.RegistrationJpa;

@Service
public class Service_implementation implements Service_deceleration {

    private RegistrationJpa regService;

    @Autowired
    public Service_implementation(RegistrationJpa regService) {
        this.regService = regService;
    }

    @Override
    @Transactional
    public void addUser(Registration user) {
        if (isEmailExists(user.getEmail())) {
            throw new IllegalArgumentException("Email already exists");
        }else {
        	
        }
        regService.save(user);
    }
    @Transactional
    private boolean isEmailExists(String email) {
       
        List<Registration> allUsers = getAllUsers();
        return allUsers.stream().anyMatch(user -> email.equals(user.getEmail()));
    }

    @Override
    public Registration getUser(int id) {
        return regService.findById(id).orElse(null);
    }

    @Override
    @Transactional
    public List<Registration> getAllUsers() {
        return regService.findAll();
    }

    @Override
    public void updateDetails(Registration user) {
        // TODO: Implement the updateDetails method based on your requirements
    }

    @Override
    @Transactional
    public List<Registration> getAdmins(boolean is_admin) {
        return regService.getAdminDetails(is_admin);
    }

}
